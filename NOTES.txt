
https://www.youtube.com/watch?v=PKwu15ldZ7k
LOGIN FIREBASE

BRANCH A-1

1. CREATE PROJECTS 
create new project - Tut-Auth-Development 
//will have 2: dev and production 
disable google analytics 

authentication tab > sign-in method 
    enable email 

create production version - Tut-Auth-Production 
//do exact same as dev version 
authentication tab > settings > Authorized Domains 
//remove locahost from domains - only development will have access 
    //dont want others to access this through localhost 
    //only access through our own server 


2. GET API KEYS 
Project overview tab > web app btn 
name - web-auth-development 
//register app 

copy firebaseConfig 
place into .env file.local 

// Your web app's Firebase configuration
const firebaseConfig = {

};


3. SETUP FIREBASE LIBRARY

npm i firebase

IN src/firebase.js:

import library and auth module 
init firebase with env variables given from the site 
export the firebase app and the auth functionality 

4. CLEAN UP (for this tutorial)

delete all css and test files
go through js files and remove css and js files 
src/components 
move App.js to components/App.js 

5. Sign Up component 

component/Signup.js 
    useRef for signup form data
render in <App/>
index.js import bootstrap 

center <Signup/> with <App/> styling 

6. Authentication

//Will use context to access auth anywhere in app 
components/AuthContext.js 
//Context https://www.youtube.com/watch?v=5LrDIWkK_Bc&ab_channel=WebDevSimplified


grab firebase authentication
create context -
    provides context of all state regarding authentication 
    currentUser state
    signup firebase func
    unsubscribe func - cleans up auth state when component unmounts
    pass on authentication state to the provider's children components (aka all components wrapped by provider)

    pass <AuthContext/> it to <Signup/>

7 On Submit async form submit 
<Signup/>
handle form submission
    prevent default 
    check passwords match
    setup async call to firebase with signup 
        submits email and password to firebase
    else error with loading state 
        disabling btn while loading

8 error ui 

    ternary for signup when theres an error show alert


9 REAL ERROR, PROCEED WITH CAUTION.
Firebase is updated to newer version than in video
Continue and make sure to understand the firebase connection methods fully since they are changed
everything else stays the same



10. WORKING SIGNUP 

<AuthContext/>
setup loading for checking if user already logged in with onAuthStateChanged 
    if loading dont render
    else render signup form
<Signup/>
    signUpLoading false on page load
    async submit event - loading true, waiting for firebase response
    loading false after one of following: 
        password match error 
        firebase error
        firebase success - signup successful
    loading true - disables the button 
    render out the email in ui to see if successful, commented out for now

NOTE: Password must be 6 characters long
    firebase auth website will show the user that signed up info




    
BRANCH A-2 

1. Routes 

Routing react router
install react-router-dom 
setup <App/> router 

<Router></Router> is within global container 
<AuthProvider></AuthProvider> and components/pages lie within 

<Router/> -> <AuthProvider/> -> <Routes/> -> <Route/>

"/signup" route established 
dashboard "/" route -> homepage


2. Dashboard component 

components/Dashboard 
homepage "/" route 


3. Login page 

components/Login 

similar to <Signup/>

delete password confirmation functionality 
change button and title to login 
change ending "no account" ?? link to Link to <Signup/>


IN <Signup/> do the same with Link to <Login/> if they have account 


4. Firebase Login function 

IN <Login/> 
switch signup function from firebase auth to login function 
//signup and login methods are coming from <AuthContext/>

change error msg for login 

IN <AuthContext/>

setup login async func from firebase

NOTE: login and signup funcs are modular - you could remove firebase auth methods and replace with your own server methods

KNOW login works when no error appears. 

Redirect back to homepage/dashboard after login successful

useNavigate hook in both <Login/> and <Signup/>